<?xml version="1.0" encoding="UTF-8"?>

<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="ehcache.xsd"
         updateCheck="true" monitoring="autodetect"
         dynamicConfig="true">
    <!--
    DiskStore configuration
    =======================

    The diskStore element is optional. To turn off disk store path creation, comment out the diskStore
    element below.

    Configure it if you have disk persistence enabled for any cache or if you use
    unclustered indexed search.

    If it is not configured, and a cache is created which requires a disk store, a warning will be
     issued and java.io.tmpdir will automatically be used.

    diskStore has only one attribute - "path". It is the path to the directory where
    any required disk files will be created.

    If the path is one of the following Java System Property it is replaced by its value in the
    running VM. For backward compatibility these should be specified without being enclosed in the ${token}
    replacement syntax.

    The following properties are translated:
    * user.home - User's home directory
    * user.dir - User's current working directory
    * java.io.tmpdir - Default temp file path
    * ehcache.disk.store.dir - A system property you would normally specify on the command line
      e.g. java -Dehcache.disk.store.dir=/u01/myapp/diskdir ...

    Subdirectories can be specified below the property e.g. java.io.tmpdir/one

    -->
    <diskStore path="java.io.tmpdir"/>
    <!--
    TransactionManagerLookup configuration
    ======================================
    This class is used by ehcache to lookup the JTA TransactionManager use in the application
    using an XA enabled ehcache. If no class is specified then DefaultTransactionManagerLookup
    will find the TransactionManager in the following order

     *GenericJNDI (i.e. jboss, where the property jndiName controls the name of the
                    TransactionManager object to look up)
     *Bitronix
     *Atomikos

    You can provide you own lookup class that implements the
    net.sf.ehcache.transaction.manager.TransactionManagerLookup interface.
    -->
    <transactionManagerLookup class="net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup"
                              properties="jndiName=java:/TransactionManager" propertySeparator=";"/>

    <defaultCache
            maxEntriesLocalHeap="0"
            eternal="false"
            timeToIdleSeconds="1200"
            timeToLiveSeconds="1200">
        <terracotta/>
    </defaultCache>
    <!--
        Sample caches. Following are some example caches. Remove these before use.
        -->
    <!--
        Sample cache named sampleCache1
        This cache contains a maximum in memory of 10000 elements, and will expire
        an element if it is idle for more than 5 minutes and lives for more than
        10 minutes.

        If there are more than 10000 elements it will overflow to the
        disk cache, which in this configuration will go to wherever java.io.tmp is
        defined on your system. On a standard Linux system this will be /tmp"
        -->
    <cache name="sampleCache1"
           maxEntriesLocalHeap="10000"
           maxEntriesLocalDisk="1000"
           eternal="false"
           diskSpoolBufferSizeMB="20"
           timeToIdleSeconds="300"
           timeToLiveSeconds="600"
           memoryStoreEvictionPolicy="LFU"
           transactionalMode="off">
        <persistence strategy="localTempSwap"/>
    </cache>
    <!--
        Sample cache named sampleCache2
        This cache has a maximum of 1000 elements in memory. There is no overflow to disk, so 1000
        is also the maximum cache size. Note that when a cache is eternal, timeToLive and
        timeToIdle are not used and do not need to be specified.
        -->
    <cache name="sampleCache2"
           maxEntriesLocalHeap="1000"
           eternal="true"
           memoryStoreEvictionPolicy="FIFO"/>
    <!--
        Sample cache named sampleCache3. This cache overflows to disk. The disk store is
        persistent between cache and VM restarts. The disk expiry thread interval is set to 10
        minutes, overriding the default of 2 minutes.
        -->
    <cache name="sampleCache3"
           maxEntriesLocalHeap="500"
           eternal="false"
           overflowToDisk="true"
           diskPersistent="true"
           timeToIdleSeconds="300"
           timeToLiveSeconds="600"
           diskExpiryThreadIntervalSeconds="1"
           memoryStoreEvictionPolicy="LFU">
    </cache>

    <cache name="match_details_cache"
           maxBytesLocalHeap="10000000"
           timeToIdleSeconds="15"
           timeToLiveSeconds="30">
    </cache>

</ehcache>